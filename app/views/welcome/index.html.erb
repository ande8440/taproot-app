<!-- allowed referer sheltered-shelf-2222.herokuapp.com -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYsUpQnWo8kqPoSK18VBKodMDr2cE5lAA"></script>

<script>

// initialize function called on DOM load. If user has previously set location, will ping Google maps with that location, make API request to lastfm for upcoming events close to location and populate map with markers using getLastFmData function. Otherwise will set map to default long and lat set in welcome#index controller and wait for user to click to request that app uses current location

function initialize() {

		  var  lat = <%= @lat %>;
		  var  lng = <%= @lng %>;

		  if(<%= @has_session_location %>) {

			  getLastFmData(lat,lng);

		  } else {
			  
			  var  myLocation = new google.maps.LatLng(lat, lng);
			  
			  var mapOptions = {
				center: new google.maps.LatLng(myLocation.lat(),myLocation.lng()),
				zoom: 13,
				mapTypeId: google.maps.MapTypeId.ROADMAP
			  };
		  
			  var map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions);
		  
			  var marker = new google.maps.Marker({
				position: myLocation,
				map: map,
				title:"you are here",
				icon: "https://s3-us-west-2.amazonaws.com/investorgraph5833/taproot/tapman.png",
				zIndex: 99
			
				});
		  }
}

function getLastFmData(lat,lng) {

		  var myLocation = new google.maps.LatLng(lat, lng);

		  // grabbing current address and updating current city html
		  geocoder = new google.maps.Geocoder();
			  geocoder.geocode({'latLng': myLocation}, function(results, status) {
					  if (status == google.maps.GeocoderStatus.OK) {
					  	var city_result = results[0].formatted_address;
					  	$("#city_result").html("Current Location: " + city_result);
					  } 
			  });


		  var mapOptions = {
			center: new google.maps.LatLng(lat,lng),
			zoom: 13,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		  };
		  
		  var map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions);

		  var marker = new google.maps.Marker({
			position: myLocation,
			map: map,
			title:"you are here",
			icon: "https://s3-us-west-2.amazonaws.com/investorgraph5833/taproot/tapman.png",
			zIndex: 99
			
			});

		  // requesting nearby event data from last fm api
		  $.get('https://ws.audioscrobbler.com/2.0/?method=geo.getevents&long='+lng+'&lat='+lat+'&api_key=027a3f56d29b8a14d7e2270344daf740&format=json&raw=true&distance=10&limit=25', function(data) {

				  // Display multiple markers on a map
				  var infoWindow = new google.maps.InfoWindow(), marker, i;
				  var infoWindowContent = [];

				  // loop through each event to put marker on map
				  for (i = 0; i < data.event.length; i++) {

				  	var last_fm_obj = data.event[i];
		 			var geo_lat = last_fm_obj.venue.location['geo:point']['geo:lat'];
					var geo_long = last_fm_obj.venue.location['geo:point']['geo:long'];
					var headliner = last_fm_obj.artists.headliner;

				      	var marker = new google.maps.Marker({
						position: new google.maps.LatLng(geo_lat, geo_long),
						map: map,
						animation: google.maps.Animation.DROP,
						title: headliner,
						zIndex: i + 1,
						icon: 'https://s3-us-west-2.amazonaws.com/investorgraph5833/taproot/map_symbol.png'
						});

					//set infoWindowContent for i
					var eventDate = new Date(last_fm_obj.startDate);
					infoWindowContent[i] = ['<div class="info_content">' + '<h1>' + last_fm_obj.title + '</h1><h2>' + eventDate.getMonth() + '/' + eventDate.getDay() + '/' + eventDate.getFullYear() +'</h2><h3>Most Popular Albums</h3></div>'];

					getTopAlbums(i,headliner);

						
// request top albums for headliner passed in as parameter from lastFM api and appends resulting data to infoWindowContent
function getTopAlbums(iterator,headliner) {
	
		$.get('https://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=' + headliner + '&api_key=027a3f56d29b8a14d7e2270344daf740&format=json&raw=true&limit=3', function(albumData) {

			var headlinerAlbums = [];

			if(albumData.album && albumData.album.length > 0) {

				for (i = 0; i < albumData.album.length; i++) {
					headlinerAlbums[i] = albumData.album[i].name;
					}
			}

			// Append to infoWindowContent
			infoWindowContent[iterator][0] += '<ul>';
			if(headlinerAlbums && headlinerAlbums.length > 0) {
				for (x = 0; x < headlinerAlbums.length; x++) {
					infoWindowContent[iterator][0] += '<li>' + headlinerAlbums[x] + '</li>';
				}

			} else {

				infoWindowContent[iterator][0] += '<li>Album Information Not Available</li>';
			}


			infoWindowContent[iterator][0] += '</ul>';



		});
} // end getTopAlbums


	// Add click event handler for each marker    
	google.maps.event.addListener(marker, 'click', (function(marker, i) {
	return function() {
		console.log(infoWindowContent[i][0]);
		infoWindow.setContent(infoWindowContent[i][0]);
		infoWindow.open(map, marker);
		}
	})(marker, i));
	
			} // end data.event loop
		}); // end geo.event last fm api request
} // end function getLastFmData


// on DOM load
$(function() {
		$.ajaxSetup({
			headers: {'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')}
			});

		initialize();

		// add click event to run getLastFmData if user requests to use current location
		$('#get_location_button').click(function(){
			$('.loading').show();
			$('.instructions').hide();
			$('#get_location_button').hide();
			if (navigator.geolocation) {
				navigator.geolocation.getCurrentPosition(setPosition);
			} else {
        			x.innerHTML = "Geolocation is not supported by this browser.";
			}

			function setPosition(position) {
				var current_position_lat = position.coords.latitude;
				var current_position_lng = position.coords.longitude;
				getLastFmData(current_position_lat,current_position_lng);
				var current_position_array = [current_position_lat, current_position_lng];

				// add session location in welcome#update_user_session_location
				$.post('welcome/update_user_session_location', { current_position_array: current_position_array });
				$('.loading').hide();
				
				}

			$('#delete_location_button').show();

			
			});

		});
</script>

<nav>
	<ul>
		<li><%= image_tag 'taproot-logo.png' %></li>
		<li>+ Paul Anderson = Great</li>
	</ul>

</nav>
<div class="clear"></div>
  
<div id="container">

	  <h3 id="city_result">Default City: New York, NY</h3>

	  <% if ! @has_session_location %>
		  <p class="instructions">Click below to set your current location and see upcoming music events around you!</p>
	  <% end %>

	  <div class="center-span3">
		  <% if ! @has_session_location %>
			  <%= link_to('Use Current Location', '#', id: 'get_location_button', class: 'button')%>
			  <%= link_to('Delete Current Location', delete_user_session_location_path, method: :post, id: 'delete_location_button', class: 'button')%>

		  <% else %>

			  <%= link_to('Delete Current Location', delete_user_session_location_path, method: :post, id: 'delete_location_button', class: 'button', style: 'display: block;')%>

		  <% end %>

	  </div> <!-- center-span3 -->

	  <div id="map-container">
		  <div id="map-canvas"></div>
	  </div> <!-- map-container -->

  </div> <!-- container -->

  <!-- modal for ajax requests -->
  <div class="loading"><%= image_tag 'ajax-loader.gif'%></div>


 
